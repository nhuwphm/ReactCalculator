{"ast":null,"code":"import _classCallCheck from\"/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// The App component serves as the main container for the application. \n// It maintains the state for previous, current, and operation \nimport React from\"react\";import Display from\"./Display\";import ButtonPanel from\"./ButtonPanel\";import calculate from\"../logic/calculate\";import\"./App.css\";// state -  holds the values for the previous operand, the current operand, and the operation to perform.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={previous:null,current:null,operation:null};// handleClick - a method that updates the state based on a button click. It calls the calculate function.\n_this.handleClick=function(buttonName){_this.setState(calculate(_this.state,buttonName));};return _this;}_createClass(App,[{key:\"render\",value:// render - a method that renders a Display component and a ButtonPanel component.\n// The Display component shows the value of the current operand, or if that's null, the previous operand. If both are null, it shows \"0\".\n// The ButtonPanel component sets the value of clickHandler to the value of this.handleClick.\n// It includes an (implicit) argument of buttonName.\nfunction render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"component-app\",children:[/*#__PURE__*/_jsx(Display,{value:this.state.current||this.state.previous||\"0\"}),/*#__PURE__*/_jsx(ButtonPanel,{clickHandler:this.handleClick})]});}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"names":["React","Display","ButtonPanel","calculate","jsx","_jsx","jsxs","_jsxs","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","previous","current","operation","handleClick","buttonName","setState","_createClass","key","value","render","className","children","clickHandler","Component","default"],"sources":["/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/src/component/App.js"],"sourcesContent":["\n// The App component serves as the main container for the application. \n// It maintains the state for previous, current, and operation \n\nimport React from \"react\";\n\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\n// state -  holds the values for the previous operand, the current operand, and the operation to perform.\nexport default class App extends React.Component {\n  state = {\n    previous: null,\n    current: null,\n    operation: null,\n  };\n\n  // handleClick - a method that updates the state based on a button click. It calls the calculate function.\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n\n  // render - a method that renders a Display component and a ButtonPanel component.\n  // The Display component shows the value of the current operand, or if that's null, the previous operand. If both are null, it shows \"0\".\n  // The ButtonPanel component sets the value of clickHandler to the value of this.handleClick.\n  // It includes an (implicit) argument of buttonName.\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.current || this.state.previous || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n"],"mappings":"gpBACA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,WAAW,CAElB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,4BACqB,CAAAC,GAAG,uBAAAC,gBAAA,EAAAC,SAAA,CAAAF,GAAA,CAAAC,gBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,GAAA,WAAAA,IAAA,MAAAK,KAAA,CAAAC,eAAA,MAAAN,GAAA,UAAAO,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAC,IAAA,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAAF,IAAA,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GAAAP,KAAA,CAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,QAAAY,MAAA,CAAAL,IAAA,GAAAL,KAAA,CACtBW,KAAK,CAAG,CACNC,QAAQ,CAAE,IAAI,CACdC,OAAO,CAAE,IAAI,CACbC,SAAS,CAAE,IACb,CAAC,CAED;AAAAd,KAAA,CACAe,WAAW,CAAG,SAAAC,UAAU,CAAI,CAC1BhB,KAAA,CAAKiB,QAAQ,CAAC3B,SAAS,CAACU,KAAA,CAAKW,KAAK,CAAEK,UAAU,CAAC,CAAC,CAClD,CAAC,QAAAhB,KAAA,EAAAkB,YAAA,CAAAvB,GAAA,GAAAwB,GAAA,UAAAC,KAAA,CAGD;AACA;AACA;AACA;AACA,SAAAC,OAAA,CAAS,CACP,mBACE3B,KAAA,QAAK4B,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B/B,IAAA,CAACJ,OAAO,EAACgC,KAAK,CAAE,IAAI,CAACT,KAAK,CAACE,OAAO,EAAI,IAAI,CAACF,KAAK,CAACC,QAAQ,EAAI,GAAI,EAAG,cACpEpB,IAAA,CAACH,WAAW,EAACmC,YAAY,CAAE,IAAI,CAACT,WAAY,EAAG,GAC3C,CAEV,CAAC,WAAApB,GAAA,GAxB8BR,KAAK,CAACsC,SAAS,SAA3B9B,GAAG,IAAA+B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}