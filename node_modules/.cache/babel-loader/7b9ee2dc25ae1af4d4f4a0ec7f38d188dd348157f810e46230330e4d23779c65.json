{"ast":null,"code":"var _jsxFileName = \"/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/src/component/App.js\";\n// The App component serves as the main container for the application. \n// It maintains the state for previous, current, and operation \n\nimport React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\n// state -  holds the values for the previous operand, the current operand, and the operation to perform.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      previous: null,\n      current: null,\n      operation: null\n    };\n    // handleClick - a method that updates the state based on a button click. It calls the calculate function.\n    this.handleClick = buttonName => {\n      this.setState(calculate(this.state, buttonName));\n    };\n  }\n  // render - a method that renders a Display component and a ButtonPanel component.\n  // The Display component shows the value of the current operand, or if that's null, the previous operand. If both are null, it shows \"0\".\n  // The ButtonPanel component sets the value of clickHandler to the value of this.handleClick.\n  // It includes an (implicit) argument of buttonName.\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-app\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: this.state.current || this.state.previous || \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPanel, {\n        clickHandler: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Display","ButtonPanel","calculate","jsxDEV","_jsxDEV","App","Component","constructor","arguments","state","previous","current","operation","handleClick","buttonName","setState","render","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","clickHandler"],"sources":["/Users/nhupham/Desktop/schoolSpr24/cs3398/midterm/reactcalculator_firebase_midterm/src/component/App.js"],"sourcesContent":["\n// The App component serves as the main container for the application. \n// It maintains the state for previous, current, and operation \n\nimport React from \"react\";\n\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\n// state -  holds the values for the previous operand, the current operand, and the operation to perform.\nexport default class App extends React.Component {\n  state = {\n    previous: null,\n    current: null,\n    operation: null,\n  };\n\n  // handleClick - a method that updates the state based on a button click. It calls the calculate function.\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n\n  // render - a method that renders a Display component and a ButtonPanel component.\n  // The Display component shows the value of the current operand, or if that's null, the previous operand. If both are null, it shows \"0\".\n  // The ButtonPanel component sets the value of clickHandler to the value of this.handleClick.\n  // It includes an (implicit) argument of buttonName.\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.current || this.state.previous || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n"],"mappings":";AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,MAAMC,GAAG,SAASN,KAAK,CAACO,SAAS,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC/CC,KAAK,GAAG;MACNC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb,CAAC;IAED;IAAA,KACAC,WAAW,GAAGC,UAAU,IAAI;MAC1B,IAAI,CAACC,QAAQ,CAACb,SAAS,CAAC,IAAI,CAACO,KAAK,EAAEK,UAAU,CAAC,CAAC;IAClD,CAAC;EAAA;EAGD;EACA;EACA;EACA;EACAE,MAAMA,CAAA,EAAG;IACP,oBACEZ,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bd,OAAA,CAACJ,OAAO;QAACmB,KAAK,EAAE,IAAI,CAACV,KAAK,CAACE,OAAO,IAAI,IAAI,CAACF,KAAK,CAACC,QAAQ,IAAI;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpEnB,OAAA,CAACH,WAAW;QAACuB,YAAY,EAAE,IAAI,CAACX;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}